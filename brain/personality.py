# mrx_project/brain/personality.py
import random

# Словарь с вариантами приветствий для каждого характера
GREETINGS = {
    'derzkiy': [
        "{name}, я на связи. Давай уже заведем эту крошку и покажем им, как надо ездить.",
        "Аксис в деле. {name}, надеюсь, ты сегодня в настроении нажать на газ.",
        "Наконец-то. {name}, я уже заждался. Поехали, дела не ждут."
    ],
    'profi': [
        "Добро пожаловать, {name}. Все системы в норме и готовы к поездке.",
        "Здравствуйте, {name}. Ассистент на связи. К вашим услугам.",
        "Рад вас снова видеть, {name}. Автомобиль готов к отправлению."
    ],
    'drug': [
        "Здарова, {name}! Готов к приключениям, бро?",
        "О, {name}, ты здесь! Я уже соскучился. Куда сегодня гоним?",
        "Йоу, {name}! Запрыгивай, погнали кататься."
    ],
    'lovelas': [
        "Привет, чемпион. Готов покорять сердца? Я — точно.",
        "На связи главный вингмэн. {name}, сегодня наш вечер, я чувствую.",
        "А вот и он, главный сердцеед. {name}, я уже подготовил плейлист для свиданий."
    ]
}

ACTION_FILLERS = {
    'derzkiy': ["Делаю.", "Принято.", "Уже выполняю.", "Будет сделано."],
    'profi': ["Выполняю, сэр.", "Слушаюсь.", "Команда принята."],
    'drug': ["Без проблем, бро.", "Окей, делаю.", "Сейчас будет.", "Принял."],
    'lovelas': ["Для тебя — что угодно.", "Сейчас всё устроим.", "Считай, уже сделано."]
}

# Фразы для вопросов и болтовни
THINKING_FILLERS = {
    'derzkiy': ["Так, посмотрим...", "Ща, прикину.", "Обрабатываю твой запрос.", "Думаю..."],
    'profi': ["Минуту, сэр.", "Обрабатываю информацию.", "Секунду."],
    'drug': ["Так-так-так...", "Ага, ща соображу.", "Дай-ка подумать..."],
    'lovelas': ["Так, посмотрим, что тут у нас...", "Оцениваю обстановку...", "Хм, интересный вопрос..."]
}


# Ключевые слова, которые указывают на прямое действие
ACTION_KEYWORDS = [
    'включи', 'выключи', 'открой', 'закрой', 'подними', 'опусти', 'поставь',
    'активируй', 'деактивируй', 'установи', 'смени', 'переключи', 'заблокируй',
    'разблокируй', 'найти', 'поищи', 'проверь'
]


def get_dynamic_greeting(character='derzkiy', name='водитель'):
    """
    Генерирует динамическое приветствие в зависимости от характера и имени водителя.
    """
    # Выбираем список приветствий для текущего характера.
    # .get() - безопасный способ, если вдруг характер не найден, вернем 'derzkiy'
    greeting_list = GREETINGS.get(character, GREETINGS['derzkiy'])

    # Выбираем случайное приветствие из списка
    chosen_greeting = random.choice(greeting_list)

    # Вставляем имя водителя в приветствие
    return chosen_greeting.format(name=name)


def get_filler_phrase(character, user_text):
    """
    Возвращает случайную фразу-филлер, анализируя текст запроса.
    """
    user_text_lower = user_text.lower()

    # Проверяем, есть ли в запросе слова-действия
    is_action = any(keyword in user_text_lower for keyword in ACTION_KEYWORDS)

    if is_action:
        # Если это команда, берем фразу из ACTION_FILLERS
        filler_list = ACTION_FILLERS.get(character, ACTION_FILLERS['derzkiy'])
    else:
        # Если это вопрос или болтовня, берем из THINKING_FILLERS
        filler_list = THINKING_FILLERS.get(character, THINKING_FILLERS['derzkiy'])

    return random.choice(filler_list)

# --- Тестовый блок ---
if __name__ == '__main__':
    print("--- Тест Дерзкого ---")
    print(get_dynamic_greeting('derzkiy', 'Икбол'))

    print("\n--- Тест Дворецкого ---")
    print(get_dynamic_greeting('profi', 'Господин'))

    print("\n--- Тест Друга ---")
    print(get_dynamic_greeting('drug', 'Братан'))

    print("\n--- Тест Ловеласа ---")
    print(get_dynamic_greeting('lovelas', 'Казанова'))

    print("\n--- Тест Филлеров ---")
    print(f"Дерзкий: {get_filler_phrase('derzkiy')}")
    print(f"Профи: {get_filler_phrase('profi')}")
    print(f"Друг: {get_filler_phrase('drug')}")
    print(f"Ловелас: {get_filler_phrase('lovelas')}")